web: gunicorn webflask:app -b "$WEB_HOST:$WEB_PORT" -w $WEB_WORKERS -k gevent --log-config $GUNICORN_LOG_FILE

# Restart only tables when they need it:
create_db: python lib/explorer/bin/model2db.py --address $DB_PROXY_ADR --dbaddress $DB_BACKEND_ADR --dbtype $DB_PROXY_TYPE --dbname $DB_NAME --dbuser $DB_USER --dbpass $DB_PASS --model $ORM_MODEL --modelschema $ORM_SCHEMA

# Force db restart per chain by removing $ORM_SCHEMA/schema.json:
# create_db: python lib/explorer/bin/model2db.py --address $DB_PROXY_ADR --dbaddress $DB_BACKEND_ADR --dbtype $DB_PROXY_TYPE --dbname $DB_NAME --dbuser $DB_USER --dbpass $DB_PASS --model $ORM_MODEL --modelschema $ORM_SCHEMA --chains=elementsregtest

mempool_bitcoin: python lib/explorer/bin/mempool_cacher.py --chain bitcoin
subscriber_bitcoin: python lib/explorer/bin/chain_subscriber.py --chain bitcoin
reorg_cron_bitcoin: python lib/explorer/bin/reorg_cron.py --chain bitcoin
greedy_cacher_bitcoin: python lib/explorer/bin/greedy_cacher.py --chain bitcoin

mempool_testnet3: python lib/explorer/bin/mempool_cacher.py --chain testnet3
subscriber_testnet3: python lib/explorer/bin/chain_subscriber.py --chain testnet3
reorg_cron_testnet3: python lib/explorer/bin/reorg_cron.py --chain testnet3
greedy_cacher_testnet3: python lib/explorer/bin/greedy_cacher.py --chain testnet3

mempool_elementsregtest: python lib/explorer/bin/mempool_cacher.py --chain elementsregtest
subscriber_elementsregtest: python lib/explorer/bin/chain_subscriber.py --chain elementsregtest
reorg_cron_elementsregtest: python lib/explorer/bin/reorg_cron.py --chain elementsregtest
greedy_cacher_elementsregtest: python lib/explorer/bin/greedy_cacher.py --chain elementsregtest
